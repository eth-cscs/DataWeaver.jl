var documenterSearchIndex = {"docs":
[{"location":"api/","page":"API reference","title":"API reference","text":"CurrentModule = DataWeaver","category":"page"},{"location":"api/#API-reference","page":"API reference","title":"API reference","text":"","category":"section"},{"location":"api/","page":"API reference","title":"API reference","text":"This is the official API reference of DataWeaver. Note that it can also be queried interactively from the Julia REPL using the help mode:","category":"page"},{"location":"api/","page":"API reference","title":"API reference","text":"julia> using DataWeaver\njulia>?\nhelp?> DataWeaver","category":"page"},{"location":"api/#[CellArray](@ref)-type-and-basic-constructors","page":"API reference","title":"CellArray type and basic constructors","text":"","category":"section"},{"location":"api/","page":"API reference","title":"API reference","text":"CellArray","category":"page"},{"location":"api/#Convenience-type-aliases-and-constructors","page":"API reference","title":"Convenience type aliases and constructors","text":"","category":"section"},{"location":"api/#Index","page":"API reference","title":"Index","text":"","category":"section"},{"location":"api/","page":"API reference","title":"API reference","text":"DataWeaver.CPUCellArray\nDataWeaver.CuCellArray\nDataWeaver.ROCCellArray","category":"page"},{"location":"api/#Documentation","page":"API reference","title":"Documentation","text":"","category":"section"},{"location":"api/","page":"API reference","title":"API reference","text":"Modules = [DataWeaver]\nOrder   = [:type]\nFilter = t -> typeof(t) !== CellArray","category":"page"},{"location":"api/#Functions-–-additional-to-standard-AbstractArray-functionality","page":"API reference","title":"Functions – additional to standard AbstractArray functionality","text":"","category":"section"},{"location":"api/#Index-2","page":"API reference","title":"Index","text":"","category":"section"},{"location":"api/","page":"API reference","title":"API reference","text":"Order = [:function]","category":"page"},{"location":"api/#Documentation-2","page":"API reference","title":"Documentation","text":"","category":"section"},{"location":"api/","page":"API reference","title":"API reference","text":"Modules = [DataWeaver]\nOrder   = [:function]","category":"page"},{"location":"api/#DataWeaver.adios2_config","page":"API reference","title":"DataWeaver.adios2_config","text":"If the ADIOS2 config file is not provided, this function uses the XML template to create the file automatically with parameters provided by the user. Returns the XML path to the new file.\n\n\n\n\n\n","category":"function"},{"location":"api/#DataWeaver.adios2_init-Tuple{}","page":"API reference","title":"DataWeaver.adios2_init","text":"Intialize ADIOS2. Supports several configuration options: MPI, serial, existing XML config file or a new file with specified parameters.\n\n\n\n\n\n","category":"method"},{"location":"api/#DataWeaver.finalize_adios-Tuple{}","page":"API reference","title":"DataWeaver.finalize_adios","text":"Close the ADIOS2 engine once all steps have been performed.\n\n\n\n\n\n","category":"method"},{"location":"api/#DataWeaver.read_setup","page":"API reference","title":"DataWeaver.read_setup","text":"Initialize io in read mode and the corresponding engine for reading data.\n\n\n\n\n\n","category":"function"},{"location":"api/#DataWeaver.write","page":"API reference","title":"DataWeaver.write","text":"Perform the update using specified variables.\n\n\n\n\n\n","category":"function"},{"location":"api/#DataWeaver.write_setup-Tuple","page":"API reference","title":"DataWeaver.write_setup","text":"Initialize io in write mode and the corresponding engine for writing data.\n\n\n\n\n\n","category":"method"},{"location":"usage/#Usage","page":"Usage","title":"Usage","text":"","category":"section"},{"location":"usage/","page":"Usage","title":"Usage","text":"Have a look at the Examples and see the API reference for details on the usage of DataWeaver.","category":"page"},{"location":"usage/#Installation","page":"Usage","title":"Installation","text":"","category":"section"},{"location":"usage/","page":"Usage","title":"Usage","text":"DataWeaver can be installed directly with the Julia package manager from the Julia REPL:","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"julia>]\n  pkg> add DataWeaver","category":"page"},{"location":"usage/#Note","page":"Usage","title":"Note","text":"","category":"section"},{"location":"usage/","page":"Usage","title":"Usage","text":"If you re-run a file that relies on MPI.jl, you may have to restart julia before you can successfully run the file again. This behavior is sometimes occurs when working with [MPI.jl].","category":"page"},{"location":"examples/#Examples","page":"...","title":"Examples","text":"","category":"section"},{"location":"examples/","page":"...","title":"...","text":"Pages = [\"examples/read_test.md\"]","category":"page"},{"location":"examples/","page":"...","title":"...","text":"Pages = [\"examples/mpi_diffusion2D.md\"]","category":"page"},{"location":"#[DataWeaver.jl](https://github.com/eth-cscs/DataWeaver.jl)-[![Star-on-GitHub](https://img.shields.io/github/stars/eth-cscs/DataWeaver.jl.svg)](https://github.com/eth-cscs/DataWeaver.jl/stargazers)","page":"Introduction","title":"DataWeaver.jl (Image: Star on GitHub)","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"The package DataWeaver provides functionality that significantly simplifies the usage of ADIOS2.jl. More specifically, the package is targeted at domain scientists who want to take advantage of the adaptable input/output system without having to care about the detailed API and cumbersome setup.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"Our package has been designed to be as intuitive as possible and the main priority was ease of use. Its main functionality relies on, essentially, just four functions that perform the initialization, read/write setup and the actual reading/writing of data.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"Browse through the documentation to learn more on how to get started quickly. In the examples section, you will find minimal setups that illustrate the basic usage (which ought to suffice for the vast majority of cases). In case you wish to delve into the details, we invite you to consult the API, as well as the original ADIOS2.jl documentation. The latter option is particularly suitable for advanced and curious users, who want to juxtapose the original ADIOS2.jl structure against our implementation.","category":"page"},{"location":"#Dependencies","page":"Introduction","title":"Dependencies","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"DataWeaver relies on ADIOS2.jl.","category":"page"},{"location":"#Contributors","page":"Introduction","title":"Contributors","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"The principal contributors to DataWeaver.jl are (ordered by the significance of the relative contributions):","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"Maja Gwozdz, (@mkg33), ETH Zurich\nDr. Samuel Omlin (@omlins), CSCS - Swiss National Supercomputing Centre, ETH Zurich","category":"page"},{"location":"examples/mpi_diffusion2D/#D-diffusion-simulation-with-[MPI.jl]-and-[DataWeaver.jl](https://github.com/eth-cscs/DataWeaver.jl)-writing-to-file","page":"2D diffusion simulation with [MPI.jl] and DataWeaver.jl - writing to file","title":"2D diffusion simulation with [MPI.jl] and DataWeaver.jl - writing to file","text":"","category":"section"},{"location":"examples/mpi_diffusion2D/","page":"2D diffusion simulation with [MPI.jl] and DataWeaver.jl - writing to file","title":"2D diffusion simulation with [MPI.jl] and DataWeaver.jl - writing to file","text":"Main.mdinclude(joinpath(Main.EXAMPLEROOT, \"mpi_diffusion2D.jl\"))","category":"page"},{"location":"examples/mpi_diffusion2D/","page":"2D diffusion simulation with [MPI.jl] and DataWeaver.jl - writing to file","title":"2D diffusion simulation with [MPI.jl] and DataWeaver.jl - writing to file","text":"The corresponding file can be found here.","category":"page"},{"location":"examples/read_test/#Reading-one-variable-with-a-pre-configured-XML-file","page":"Reading one variable with a pre-configured XML file","title":"Reading one variable with a pre-configured XML file","text":"","category":"section"},{"location":"examples/read_test/","page":"Reading one variable with a pre-configured XML file","title":"Reading one variable with a pre-configured XML file","text":"Main.mdinclude(joinpath(Main.EXAMPLEROOT, \"read_test.jl\"))","category":"page"},{"location":"examples/read_test/","page":"Reading one variable with a pre-configured XML file","title":"Reading one variable with a pre-configured XML file","text":"The corresponding file can be found here.","category":"page"}]
}
